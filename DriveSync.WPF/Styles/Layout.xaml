<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:properties="clr-namespace:DriveSync.Properties">

    <!--Title Bar Style-->
    <Style x:Key="TitleBarStyle" TargetType="{x:Type StackPanel}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                <Setter Property="Background" Value="{DynamicResource LightAddressAreaBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource DarkAddressAreaBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Main Window Border Style-->
    <Style x:Key="MainWindowBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                <Setter Property="BorderBrush" Value="{DynamicResource MainWindowLightBorderBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                <Setter Property="BorderBrush" Value="{DynamicResource MainWindowDarkBorderBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Inner Window Border Style-->
    <Style x:Key="InnerWindowBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                <Setter Property="Background" Value="{DynamicResource MainLightBackgroundBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource MainDarkBackgroundBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Main Body-->
    <Style x:Key="MainBodyStyle" TargetType="{x:Type Grid}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                <Setter Property="Background" Value="{DynamicResource MainLightBackgroundBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource MainDarkBackgroundBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Header-->
    <Style x:Key="HeaderStyle" TargetType="{x:Type StackPanel}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                <Setter Property="Background" Value="{DynamicResource LightSectionBackgroundBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource DarkSectionBackgroundBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Line Separator in Header-->
    <Style x:Key="LineSeparatorStyle" TargetType="{x:Type Line}">
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="X1" Value="0" />
        <Setter Property="X2" Value="0" />
        <Setter Property="Y1" Value="10" />
        <Setter Property="Y2" Value="65" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                <Setter Property="Stroke" Value="{DynamicResource LightLineStrokeBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                <Setter Property="Stroke" Value="{DynamicResource DarkLineStrokeBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Address Display Area-->
    <Style x:Key="AddressAreaStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="6 6 0 0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                <Setter Property="Background" Value="{DynamicResource LightAddressAreaBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource DarkAddressAreaBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Main Display Area-->
    <Style x:Key="MainDisplayAreaStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="CornerRadius" Value="0 0 6 6" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                <Setter Property="Background" Value="{DynamicResource LightSectionBackgroundBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource DarkSectionBackgroundBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Scroll Bar Begin-->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Margin="1"
                            CornerRadius="2"
                            Background="{StaticResource TransparentBrush}"
                            BorderThickness="0">
                        <Path HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Fill="{StaticResource TransparentBrush}"
                              Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{DynamicResource TransparentBrush}" CornerRadius="6" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderThickness="0" Margin="5,4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Light Vertical ScrollBar Template-->
    <ControlTemplate x:Key="VerticalScrollBarLight" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.00001*"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="2" Background="{StaticResource TrackBrushLight}" Width="8" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="thumb" Style="{StaticResource ScrollBarThumb}" Background="{StaticResource ThumbNormalBrushLight}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="thumb" Value="{StaticResource ThumbHoverBrushLight}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Dark Vertical ScrollBar Template-->
    <ControlTemplate x:Key="VerticalScrollBarDark" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.00001*"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="2" Background="{StaticResource TrackBrushDark}" Width="8" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="thumb" Style="{StaticResource ScrollBarThumb}" Background="{StaticResource ThumbNormalBrushDark}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="thumb" Value="{StaticResource ThumbHoverBrushDark}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Light Horizontal ScrollBar Template-->
    <ControlTemplate x:Key="HorizontalScrollBarLight" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.00001*"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="2" Background="{StaticResource TrackBrushLight}" Height="8"/>
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False" Orientation="Horizontal">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="thumb" Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource ThumbNormalBrushLight}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="thumb" Value="{StaticResource ThumbHoverBrushLight}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Dark Horizontal ScrollBar Template-->
    <ControlTemplate x:Key="HorizontalScrollBarDark" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.00001*"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" CornerRadius="2" Background="{StaticResource TrackBrushDark}" Height="8"/>
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False" Orientation="Horizontal">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="thumb" Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource ThumbNormalBrushDark}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="thumb" Value="{StaticResource ThumbHoverBrushDark}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Orientation}" Value="Horizontal" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBarLight}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Orientation}" Value="Horizontal" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="18" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBarDark}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Orientation}" Value="Vertical" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBarLight}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Orientation}" Value="Vertical" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBarDark}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0"/>
                        <ScrollBar Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        <Rectangle Grid.Row="1" Grid.Column="1" Fill="Red"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Scroll Bar End-->

    <!--Main Dialog Window Border Style-->
    <Style x:Key="MainDialogWindowBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                <Setter Property="BorderBrush" Value="{DynamicResource MainWindowLightBorderBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                <Setter Property="BorderBrush" Value="{DynamicResource MainWindowDarkBorderBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--Main Dialog Window Title-->
    <Style x:Key="DialogTitleStyle" TargetType="{x:Type StackPanel}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                <Setter Property="Background" Value="{DynamicResource TransparentBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource TransparentBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Inner Dialog Window Border Style-->
    <Style x:Key="InnerDialogWindowBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Light">
                <Setter Property="Background" Value="{DynamicResource LightSectionBackgroundBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=Theme}" Value="Dark">
                <Setter Property="Background" Value="{DynamicResource MainDarkBackgroundBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>