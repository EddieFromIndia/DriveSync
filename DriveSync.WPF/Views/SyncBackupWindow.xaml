<Window x:Class="DriveSync.Views.SyncBackupWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:view="clr-namespace:DriveSync.Views"
        xmlns:converter="clr-namespace:DriveSync.Converters"
        mc:Ignorable="d"
        Icon="pack://application:,,,/Assets/logo.png"
        Title="Drive Sync"
        Height="600" MinHeight="480"
        Width="880" MinWidth="880"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        AllowsTransparency="True">
    
    <Window.Resources>
        <!--#region Main Window Styling-->
        <Style TargetType="{x:Type view:SyncBackupWindow}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <!--Outer border with the dropshadow margin-->
                        <Border Padding="{Binding OuterMarginThickness, FallbackValue=10}">

                            <!--Window border and dropshadow-->
                            <Border Style="{DynamicResource MainWindowBorderStyle}"
                                    CornerRadius="{Binding WindowCornerRadius, FallbackValue=8}">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="15"
                                                      Color="{DynamicResource DefaultShadowColor}"
                                                      ShadowDepth="0"
                                                      Opacity="0.3" />
                                </Border.Effect>

                                <!--Main window outline-->
                                <Grid>

                                    <!--Opacity mask for corners on grid-->
                                    <Border x:Name="Container"
                                        Style="{DynamicResource InnerWindowBorderStyle}"
                                        CornerRadius="{Binding WindowCornerRadius}" />

                                    <!--The main window content-->
                                    <Grid Margin="0">

                                        <!--Corner clipping-->
                                        <Grid.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=Container}" />
                                        </Grid.OpacityMask>

                                        <Grid.RowDefinitions>

                                            <!--Title Bar-->
                                            <RowDefinition Height="34" />
                                            <!--Window Content-->
                                            <RowDefinition Height="*" />

                                        </Grid.RowDefinitions>

                                        <!--Title Bar-->
                                        <StackPanel Grid.Row="0"
                                                    Style="{DynamicResource TitleBarStyle}"
                                                    Panel.ZIndex="1">
                                            <StackPanel.InputBindings>
                                                <MouseBinding Gesture="LeftDoubleClick"
                                                              Command="{Binding Header_DoubleClick}"
                                                              CommandParameter="{Binding RelativeSource={RelativeSource
                                                                                                         Mode=FindAncestor,
                                                                                                         AncestorType={x:Type Window}}}" />
                                                <MouseBinding Gesture="LeftClick"
                                                              Command="{Binding Header_Click}"
                                                              CommandParameter="{Binding RelativeSource={RelativeSource
                                                                                                         Mode=FindAncestor,
                                                                                                         AncestorType={x:Type Window}}}" />
                                                <MouseBinding Gesture="RightClick"
                                                              Command="{Binding Header_RightClick}"
                                                              CommandParameter="{Binding RelativeSource={RelativeSource
                                                                                                         Mode=FindAncestor,
                                                                                                         AncestorType={x:Type Window}}}" />
                                            </StackPanel.InputBindings>
                                            <Grid Opacity="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                    AncestorType={x:Type Window}},
                                                            Converter={x:Static converter:WindowActiveStateToOpacityConverter.Instance},
                                                            Path=IsActive,
                                                            Mode=OneWay}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="38" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="48" />
                                                    <ColumnDefinition Width="48" />
                                                    <ColumnDefinition Width="48" />
                                                </Grid.ColumnDefinitions>

                                                <Image Grid.Column="0"
                                                       Source="{TemplateBinding Icon}"
                                                       Margin="12 0 6 0" />
                                                <TextBlock Grid.Column="1"
                                                           VerticalAlignment="Center"
                                                           FontSize="12"
                                                           FontWeight="Normal"
                                                           TextAlignment="Left"
                                                           Text="{TemplateBinding Title}" />
                                                <Button Grid.Column="2"
                                                        Style="{DynamicResource TitleBarButton}"
                                                        HorizontalAlignment="Right"
                                                        ToolTipService.InitialShowDelay="500"
                                                        ToolTipService.BetweenShowDelay="500"
                                                        ToolTip="Minimize"
                                                        Command="{Binding MinimizeButton_Click}"
                                                        CommandParameter="{Binding RelativeSource={RelativeSource
                                                                                                   Mode=FindAncestor,
                                                                                                   AncestorType={x:Type Window}}}">
                                                    <Image Source="{Binding RelativeSource={RelativeSource
                                                                                            Mode=FindAncestor,
                                                                                            AncestorType={x:Type Window}},
                                                                    Converter={x:Static converter:WindowStateToImageConverter.Instance},
                                                                    ConverterParameter='minimize',
                                                                    Path=WindowState,
                                                                    Mode=OneWay}"
                                                           Height="16" />
                                                </Button>
                                                <Button Grid.Column="3"
                                                        Style="{DynamicResource TitleBarButton}"
                                                        ToolTipService.InitialShowDelay="500"
                                                        ToolTipService.BetweenShowDelay="500"
                                                        ToolTip="Maximize/Restore"
                                                        Command="{Binding MaximizeButton_Click}"
                                                        CommandParameter="{Binding RelativeSource={RelativeSource
                                                                                                   Mode=FindAncestor,
                                                                                                   AncestorType={x:Type Window}}}">
                                                    <Image Source="{Binding RelativeSource={RelativeSource
                                                                                            Mode=FindAncestor,
                                                                                            AncestorType={x:Type Window}},
                                                                    Converter={x:Static converter:WindowStateToImageConverter.Instance},
                                                                    ConverterParameter='maximize',
                                                                    Path=WindowState,
                                                                    Mode=OneWay}"
                                                           Height="16" />
                                                </Button>
                                                <Button Grid.Column="4"
                                                        Style="{DynamicResource TitleBarButton}"
                                                        HorizontalAlignment="Right"
                                                        ToolTipService.InitialShowDelay="500"
                                                        ToolTipService.BetweenShowDelay="500"
                                                        ToolTip="Close"
                                                        Command="{Binding CloseButton_Click}"
                                                        CommandParameter="{Binding RelativeSource={RelativeSource
                                                                                                   Mode=FindAncestor,
                                                                                                   AncestorType={x:Type Window}}}">
                                                    <Image Source="{Binding RelativeSource={RelativeSource
                                                                                            Mode=FindAncestor,
                                                                                            AncestorType={x:Type Window}},
                                                                    Converter={x:Static converter:WindowStateToImageConverter.Instance},
                                                                    ConverterParameter='close',
                                                                    Path=WindowState,
                                                                    Mode=OneWay}"
                                                           Height="16" />
                                                </Button>
                                            </Grid>
                                        </StackPanel>

                                         <!--Page Content-->
                                        <Border Grid.Row="1">
                                            <ContentPresenter Content="{TemplateBinding Content}" />
                                        </Border>

                                    </Grid>

                                </Grid>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="10" CornerRadius="0" CaptionHeight="0" GlassFrameThickness="0" />
    </WindowChrome.WindowChrome>

    <Grid Style="{DynamicResource MainBodyStyle}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="30" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="30" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="75" /> <!--Menu-->
            <RowDefinition Height="40" /> <!--Original & Backup Label-->
            <RowDefinition Height="30" /> <!--Original & Backup TextBox-->
            <RowDefinition Height="15" /> <!--Padding-->
            <RowDefinition Height="30" /> <!--Address Display-->
            <RowDefinition Height="*" /> <!--Description Area-->
            <RowDefinition Height="20" /> <!--Padding-->
            <RowDefinition Height="30" /> <!--Buttons-->
            <RowDefinition Height="10" /> <!--Padding-->
            <RowDefinition Height="30" /> <!--Footer-->
        </Grid.RowDefinitions>

        <!--Menu-->
        <StackPanel Grid.Column="0"
                    Grid.Row="0"
                    Grid.ColumnSpan="5"
                    Orientation="Horizontal"
                    Style="{DynamicResource HeaderStyle}">

            <Button Style="{DynamicResource HeaderButton}"
                    Width="65"
                    Margin="30 2 0 0"
                    Command="{Binding RefreshButton_Click}"
                    ToolTipService.InitialShowDelay="500"
                    ToolTipService.BetweenShowDelay="500"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Refresh">
                <StackPanel>
                    <Image Source="/Assets/refresh.png" Width="28" Margin="4" />
                    <TextBlock Text="Refresh" TextAlignment="Center" TextWrapping="WrapWithOverflow" />
                </StackPanel>
            </Button>
            <Button Style="{DynamicResource HeaderButton}"
                    Width="70"
                    Margin="0 2 0 0"
                    Command="{Binding VisibilityButton_Click}"
                    ToolTipService.InitialShowDelay="500"
                    ToolTipService.BetweenShowDelay="500"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Show/hide folders and files that have no discrepancies.">
                <StackPanel>
                    <Image Width="36" Source="{Binding ShowEqualEntries,
                                Converter={x:Static converter:BooleanToImageConverter.Instance},
                                ConverterParameter='visibility'}" />
                    <TextBlock Text="{Binding ShowEqualEntries,
                                Converter={x:Static converter:BooleanToTextConverter.Instance},
                                ConverterParameter='visibility',
                                FallbackValue='Hide equal files/folders'}" TextAlignment="Center" TextWrapping="WrapWithOverflow" />
                </StackPanel>
            </Button>
            <Button Style="{DynamicResource HeaderButton}"
                    Width="70"
                    Margin="0 2 0 0"
                    Command="{Binding ShowHideEmptyFolderButton_Click}"
                    ToolTipService.InitialShowDelay="500"
                    ToolTipService.BetweenShowDelay="500"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Show/hide empty folders">
                <StackPanel>
                    <Image Width="36" Source="{Binding ShowEmptyFolder,
                                Converter={x:Static converter:BooleanToImageConverter.Instance},
                                ConverterParameter='folder-empty'}" />
                    <TextBlock Text="{Binding ShowEmptyFolder,
                                Converter={x:Static converter:BooleanToTextConverter.Instance},
                                ConverterParameter='folder-empty',
                                FallbackValue='Hide empty folders'}" TextAlignment="Center" TextWrapping="WrapWithOverflow" />
                </StackPanel>
            </Button>

            <Line Style="{DynamicResource LineSeparatorStyle}" Margin="20 0 10 0" />

            <Button Style="{DynamicResource HeaderButton}"
                    Width="65"
                    Margin="0 2 0 0"
                    Command="{Binding SettingsButton_Click}"
                    ToolTipService.InitialShowDelay="500"
                    ToolTipService.BetweenShowDelay="500"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Settings">
                <StackPanel>
                    <Image Source="/Assets/settings.png" Width="32" Margin="2" />
                    <TextBlock Text="Settings" TextAlignment="Center" TextWrapping="WrapWithOverflow" />
                </StackPanel>
            </Button>
            <Button Style="{DynamicResource HeaderButton}"
                    Width="65"
                    Margin="0 2 0 0"
                    Command="{Binding UpdateButton_Click}"
                    ToolTipService.InitialShowDelay="500"
                    ToolTipService.BetweenShowDelay="500"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Check for updates">
                <StackPanel>
                    <Image Source="/Assets/update.png" Width="32" Margin="2" />
                    <TextBlock Text="Check for updates" TextAlignment="Center" TextWrapping="WrapWithOverflow" />
                </StackPanel>
            </Button>

            <Line Style="{DynamicResource LineSeparatorStyle}" Margin="20 0 10 0" />

            <Button Style="{DynamicResource HeaderButton}"
                    Width="65"
                    Margin="0 2 0 0"
                    Command="{Binding TutorialButton_Click}"
                    ToolTipService.InitialShowDelay="500"
                    ToolTipService.BetweenShowDelay="500"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Tutorials">
                <StackPanel>
                    <Image Source="/Assets/tutorial.png" Width="32" Margin="2" />
                    <TextBlock Text="Tutorials" TextAlignment="Center" TextWrapping="WrapWithOverflow" />
                </StackPanel>
            </Button>
        </StackPanel>

        <!--Original-->
        <TextBlock Grid.Column="1"
                   Grid.Row="1"
                   Margin="0 10 0 0"
                   Text="Original:"
                   VerticalAlignment="Center" />
        <Grid Grid.Column="1"
              Grid.Row="2"
              HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="30" />
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="0"
                     Style="{DynamicResource DefaultTextBoxStyle}"
                     VerticalContentAlignment="Center"
                     Text="{Binding OriginalPath}"
                     IsEnabled="False" />
            <Button Grid.Column="2"
                    Style="{StaticResource ImageButton}"
                    Width="30"
                    Command="{Binding BrowseButton_Click}"
                    CommandParameter="Original"
                    ToolTipService.InitialShowDelay="500"
                    ToolTipService.BetweenShowDelay="500"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Browse">
                <Image Source="/Assets/folder-open.png" />
            </Button>
        </Grid>
        
        <!--Backup-->
        <TextBlock Grid.Column="3"
                   Grid.Row="1"
                   Text="Backup:"
                   Margin="0 10 0 0"
                   VerticalAlignment="Center" />
        <Grid Grid.Column="3"
              Grid.Row="2"
              HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="30" />
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="0"
                     Style="{DynamicResource DefaultTextBoxStyle}"
                     VerticalContentAlignment="Center"
                     Text="{Binding BackupPath}"
                     IsEnabled="False" />
            <Button Grid.Column="2"
                    Style="{StaticResource ImageButton}"
                    Width="30"
                    Command="{Binding BrowseButton_Click}"
                    CommandParameter="Backup"
                    ToolTipService.InitialShowDelay="500"
                    ToolTipService.BetweenShowDelay="500"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Browse">
                <Image Source="/Assets/folder-open.png" />
            </Button>
        </Grid>
        
        <!--Address Display Area-->
        <Border Grid.Column="1"
                Grid.Row="4"
                Style="{DynamicResource AddressAreaStyle}">
            <Grid Visibility="{Binding LastOriginalPath,
                               Converter={x:Static converter:StringToVisibilityConverter.Instance},
                               FallbackValue=Hidden}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0"
                        Style="{StaticResource ImageButton}"
                        Margin="5"
                        Command="{Binding BackButton_Click}"
                        CommandParameter="Backup"
                        ToolTipService.InitialShowDelay="500"
                        ToolTipService.BetweenShowDelay="500"
                        ToolTipService.ShowOnDisabled="True"
                        ToolTip="Up one level">
                    <Image Source="{Binding Path=IsEnabled,
                                    RelativeSource={RelativeSource FindAncestor,
                                    AncestorType={x:Type Button},
                                    AncestorLevel=1},
                                    Converter={x:Static converter:BooleanToImageConverter.Instance},
                                    ConverterParameter='back'}" />
                </Button>
                <TextBlock Grid.Column="1"
                           Style="{DynamicResource AddressTextBlockStyle}"
                           Text="{Binding LastOriginalPath}"
                           TextTrimming="CharacterEllipsis"
                           ToolTipService.InitialShowDelay="500"
                           ToolTipService.BetweenShowDelay="500"
                           ToolTipService.ShowOnDisabled="True"
                           ToolTip="{Binding LastOriginalPath}" />
            </Grid>
        </Border>

        <Border Grid.Column="3"
                Grid.Row="4"
                Style="{DynamicResource AddressAreaStyle}">
            <Grid Visibility="{Binding LastOriginalPath,
                               Converter={x:Static converter:StringToVisibilityConverter.Instance},
                               FallbackValue=Hidden}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0"
                        Style="{StaticResource ImageButton}"
                        Margin="5"
                        Command="{Binding BackButton_Click}"
                        CommandParameter="Backup"
                        ToolTipService.InitialShowDelay="500"
                        ToolTipService.BetweenShowDelay="500"
                        ToolTipService.ShowOnDisabled="True"
                        ToolTip="Up one level">
                    <Image Source="{Binding Path=IsEnabled,
                                    RelativeSource={RelativeSource FindAncestor,
                                    AncestorType={x:Type Button},
                                    AncestorLevel=1},
                                    Converter={x:Static converter:BooleanToImageConverter.Instance},
                                    ConverterParameter='back'}" />
                </Button>
                <TextBlock Grid.Column="1"
                           Style="{DynamicResource AddressTextBlockStyle}"
                           Text="{Binding LastBackupPath}"
                           TextTrimming="CharacterEllipsis"
                           ToolTipService.InitialShowDelay="500"
                           ToolTipService.BetweenShowDelay="500"
                           ToolTipService.ShowOnDisabled="True"
                           ToolTip="{Binding LastBackupPath}" />
            </Grid>
        </Border>

        <!--Original Display Area-->
        <Grid Grid.Column="1" Grid.Row="5">
            <Border Style="{DynamicResource MainDisplayAreaStyle}">
                <ListView x:Name="OriginalList"
                          ItemsSource="{Binding OriginalDirectoriesToDisplay}"
                          Background="Transparent"
                          BorderThickness="0"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          ScrollViewer.ScrollChanged="ScrollChanged"
                          HorizontalContentAlignment="Stretch">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding ExpandOriginalDirectory}" CommandParameter="{Binding ElementName=OriginalList, Path=SelectedItem}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Image Grid.Column="0"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Width="20"
                                       Source="{Binding Type,
                                                Converter={x:Static converter:ItemTypeToImageConverter.Instance}}" />
                                <TextBlock Grid.Column="1"
                                           VerticalAlignment="Center"
                                           TextTrimming="CharacterEllipsis"
                                           Foreground="{Binding Status,
                                                        Converter={x:Static converter:ItemStatusToColorBrushConverter.Instance}}"
                                           FontWeight="SemiBold"
                                           Text="{Binding Item.Name}"
                                           ToolTipService.InitialShowDelay="500"
                                           ToolTipService.BetweenShowDelay="500"
                                           ToolTipService.ShowOnDisabled="True"
                                           ToolTip="{Binding DifferentPath,
                                                     Converter={x:Static converter:PathToStringConverter.Instance},
                                                     ConverterParameter='original'}" />
                                <Button Grid.Column="1"
                                        HorizontalAlignment="Right"
                                        Margin="0 0 35 0"
                                        Width="20"
                                        Style="{DynamicResource ManualResolveButton}"
                                        Command="{Binding DataContext.DeleteButton_Click,
                                                  RelativeSource={RelativeSource FindAncestor,
                                                  AncestorType={x:Type Window}}}"
                                        CommandParameter="{Binding}"
                                        ToolTipService.InitialShowDelay="500"
                                        ToolTipService.BetweenShowDelay="500"
                                        ToolTipService.ShowOnDisabled="True"
                                        ToolTip="Delete item">
                                    <Image Source="/Assets/delete.png" />
                                </Button>
                                <Button Grid.Column="1"
                                        HorizontalAlignment="Right"
                                        Margin="0 0 10 0"
                                        Width="20"
                                        Style="{DynamicResource ManualResolveButton}"
                                        Command="{Binding DataContext.MergeOriginal_Click,
                                                  RelativeSource={RelativeSource FindAncestor,
                                                  AncestorType={x:Type Window}}}"
                                        CommandParameter="{Binding}"
                                        ToolTipService.InitialShowDelay="500"
                                        ToolTipService.BetweenShowDelay="500"
                                        ToolTipService.ShowOnDisabled="True"
                                        ToolTip="{Binding Status,
                                                  Converter={x:Static converter:ItemStatusToStringConverter.Instance},
                                                  ConverterParameter='original'}">
                                    <Image Source="{Binding Status,
                                                    Converter={x:Static converter:ItemStatusToImageConverter.Instance},
                                                    ConverterParameter='original'}" />
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Border>
            <Border Background="{Binding ElementName=OriginalText,
                                 Path=Text,
                                 Converter={x:Static converter:StringToColorBrushConverter.Instance}}"
                    CornerRadius="0 0 6 6"
                    IsHitTestVisible="False">
                <TextBlock x:Name="OriginalText"
                           Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                           Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}"
                           Padding="10"
                           Text="{Binding OriginalDisplayText}"
                           IsHitTestVisible="False"/>
            </Border>
        </Grid>

        <!--Link Icon-->
        <StackPanel Grid.Column="2"
                    Grid.Row="5"
                    VerticalAlignment="Center">
            <Button Style="{DynamicResource ImageButton}"
                    Width="26"
                    Command="{Binding Link_Click}"
                    ToolTipService.InitialShowDelay="500"
                    ToolTipService.BetweenShowDelay="500"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Scroll original and backup together">
                <Image Source="{Binding IsLinked,
                                Converter={x:Static converter:BooleanToImageConverter.Instance},
                                ConverterParameter='link'}" />
            </Button>
        </StackPanel>
        
        <!--Backup Display Area-->
        <Grid Grid.Column="3" Grid.Row="5">
            <Border Style="{DynamicResource MainDisplayAreaStyle}">
                <ListView x:Name="BackupList"
                          ItemsSource="{Binding BackupDirectoriesToDisplay}"
                          Background="Transparent"
                          BorderThickness="0"
                          ScrollViewer.VerticalScrollBarVisibility="Auto"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                          ScrollViewer.ScrollChanged="ScrollChanged"
                          HorizontalContentAlignment="Stretch">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <i:InvokeCommandAction Command="{Binding ExpandBackupDirectory}" CommandParameter="{Binding ElementName=BackupList, Path=SelectedItem}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Image Grid.Column="0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Width="20"
                                    Source="{Binding Type,
                                             Converter={x:Static converter:ItemTypeToImageConverter.Instance}}" />
                                <TextBlock Grid.Column="1"
                                        VerticalAlignment="Center"
                                        TextTrimming="CharacterEllipsis"
                                        Foreground="{Binding Status,
                                                    Converter={x:Static converter:ItemStatusToColorBrushConverter.Instance}}"
                                        FontWeight="SemiBold"
                                        Text="{Binding Item.Name}"
                                           ToolTipService.InitialShowDelay="500"
                                           ToolTipService.BetweenShowDelay="500"
                                           ToolTipService.ShowOnDisabled="True"
                                           ToolTip="{Binding DifferentPath,
                                                     Converter={x:Static converter:PathToStringConverter.Instance},
                                                     ConverterParameter='backup'}" />
                                <Button Grid.Column="1"
                                        Margin="0 0 35 0"
                                        Width="20"
                                        Style="{DynamicResource ManualResolveButton}"
                                        Command="{Binding DataContext.MergeBackup_Click,
                                                  RelativeSource={RelativeSource FindAncestor,
                                                  AncestorType={x:Type Window}}}"
                                        CommandParameter="{Binding}"
                                        ToolTipService.InitialShowDelay="500"
                                        ToolTipService.BetweenShowDelay="500"
                                        ToolTipService.ShowOnDisabled="True"
                                        ToolTip="{Binding Status,
                                                  Converter={x:Static converter:ItemStatusToStringConverter.Instance},
                                                  ConverterParameter='backup'}">
                                    <Image Source="{Binding Status,
                                                    Converter={x:Static converter:ItemStatusToImageConverter.Instance},
                                                    ConverterParameter='backup'}" />
                                </Button>
                                <Button Grid.Column="1"
                                        Margin="0 0 10 0"
                                        Width="20"
                                        Style="{DynamicResource ManualResolveButton}"
                                        Command="{Binding DataContext.DeleteButton_Click,
                                                  RelativeSource={RelativeSource FindAncestor,
                                                  AncestorType={x:Type Window}}}"
                                        CommandParameter="{Binding}"
                                        ToolTipService.InitialShowDelay="500"
                                        ToolTipService.BetweenShowDelay="500"
                                        ToolTipService.ShowOnDisabled="True"
                                        ToolTip="Delete item">
                                    <Image Source="/Assets/delete.png" />
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Border>
            <Border Background="{Binding ElementName=BackupText,
                                 Path=Text,
                                 Converter={x:Static converter:StringToColorBrushConverter.Instance}}"
                    CornerRadius="0 0 6 6"
                    IsHitTestVisible="False">
                <TextBlock x:Name="BackupText"
                           Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                           Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}"
                           Padding="10"
                           Text="{Binding BackupDisplayText}"
                           IsHitTestVisible="False"/>
            </Border>
        </Grid>
        
        <!--Main Button Area-->
        <StackPanel Grid.Column="1"
                    Grid.Row="7"
                    Grid.ColumnSpan="3"
                    VerticalAlignment="Center">
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Left">
                <Ellipse Width="10" Height="10" Fill="#FFB4B4B4" Margin="10 0" />
                <TextBlock VerticalAlignment="Center" Text="No Differences" />

                <Ellipse Width="10" Height="10" Fill="#FF7C578B" Margin="49 0 10 0" />
                <TextBlock VerticalAlignment="Center" Text="Exists with different name" />
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Left">
                <Ellipse Width="10" Height="10" Fill="#FFB0892E" Margin="10 0" />
                <TextBlock VerticalAlignment="Center" Text="Different Contents" />

                <Ellipse Width="10" Height="10" Fill="#FFC4514B" Margin="30 0 10 0" />
                <TextBlock VerticalAlignment="Center" Text="Does not exist" />
            </StackPanel>
        </StackPanel>
        <StackPanel Grid.Column="1"
                    Grid.Row="7"
                    Grid.ColumnSpan="3"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <Button Style="{DynamicResource GeneralButton}"
                    Width="100"
                    Margin="0 0 20 0"
                    Command="{Binding ScanButton_Click}"
                    IsDefault="True"
                    ToolTipService.InitialShowDelay="500"
                    ToolTipService.BetweenShowDelay="500"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="{Binding RelativeSource={x:Static RelativeSource.Self},
                            Converter={x:Static converter:ButtonEnabledToStringConverter.Instance},
                            ConverterParameter='Compare the original and backup for discrepancies (Enter).',
                            Path=IsEnabled, Mode=OneWay}"
                    Content="Scan" />


            <ComboBox Style="{DynamicResource DefaultComboBoxStyle}" VerticalAlignment="Center"
                      Width="100"
                      Height="30"
                      Margin="0 0 7 0"
                      SelectedIndex="{Binding ResolveMethod,
                                      Converter={x:Static converter:EnumToIntConverter.Instance},
                                      Mode=TwoWay}"
                      VerticalContentAlignment="Center"
                      Padding="10 0 0 0"
                      ToolTipService.InitialShowDelay="500"
                      ToolTipService.BetweenShowDelay="500"
                      ToolTipService.ShowOnDisabled="True"
                      ToolTip="{Binding RelativeSource={x:Static RelativeSource.Self},
                              Converter={x:Static converter:ButtonEnabledToStringConverter.Instance},
                              ConverterParameter='Determines how to handle auto-resolve.',
                              Path=IsEnabled, Mode=OneWay}">
                <ComboBoxItem IsSelected="True" Content="Left To Right" />
                <ComboBoxItem Content="Right To Left" />
            </ComboBox>
            <Button Style="{DynamicResource GeneralButton}"
                    Width="120"
                    Margin="0 0 20 0"
                    Command="{Binding AutoResolveButton_Click}"
                    ToolTipService.InitialShowDelay="500"
                    ToolTipService.BetweenShowDelay="500"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="{Binding RelativeSource={x:Static RelativeSource.Self},
                            Converter={x:Static converter:ButtonEnabledToStringConverter.Instance},
                            ConverterParameter='Auto-resolve all discrepancies.',
                            Path=IsEnabled, Mode=OneWay}"
                    Content="Auto-Resolve" />

            <Button Style="{DynamicResource GeneralButton}"
                    Width="100"
                    Command="{Binding ClearButton_Click}"
                    IsCancel="True"
                    ToolTipService.InitialShowDelay="500"
                    ToolTipService.BetweenShowDelay="500"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Clears everything (Esc)."
                    Content="Clear" />

        </StackPanel>

        <StackPanel Grid.Column="3"
                    Grid.Row="9"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Visibility="{Binding ProgressVisibility}">

            <TextBlock Text="{Binding ProgressString}"
                       Margin="0 0 10 0"
                       FontSize="11" />
            <ProgressBar Width="120"
                         Height="16"
                         Minimum="0"
                         Maximum="100"
                         Value="{Binding ProgressPercentage}" />
        </StackPanel>
    </Grid>
</Window>
